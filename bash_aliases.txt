###################################################################
### CUSTOM ALIASES JUST FOR UBUNTU, JUST FOR YOU
# -------------------------------------
# Stores the bashrc file in this variable
export BF=~/.bashrc
# You can later replace nano with a text editor of your choice - gedit, subl, vim, emacs, ...
alias brc="sudo subl ${BF}"
alias sbrc="source ${BF}"
# -------------------------------------
# Makes bash the default instead of sh
alias sh=bash
# -------------------------------------
# Python 3 instead of Python 2 - uncomment if you'd like to
# alias python=python3
# -------------------------------------
# apt aliases
alias sau="sudo apt-get update"
alias sai="sudo apt-get install"
alias aptgetupgrade="sudo apt-get upgrade"
alias sarm="sudo apt-get remove "
alias sap="sudo apt-get purge"
# If you ever get APT lock errors aptreset will do your work for ya
alias aptreset="sudo rm -rf ~/locks; mkdir -p ~/locks/apt/list ~/locks/dpkg; sudo mv /var/lib/apt/lists/lock ~/locks/apt/list; sudo mv /var/lib/dpkg/lock ~/locks/dpkg/lock; sudo mv /var/cache/apt/archives/lock ~/locks/apt; sudo dpkg --configure -a"
# -------------------------------------
# Aliases to replace your pip installs easier
alias py2install="python2 -m pip install --user "
alias py3install="python3 -m pip install --user "
# -------------------------------------
# function for apt completion, currently doesn't work
_sai_complete() {
	mapfile -t COMPREPLY < <(apt-cache --no-generate pkgnames "");
}
complete -F _sai_complete sai
complete -F _sai_complete saiy
# -------------------------------------
# other shell aliases
# to find the PID of any process
alias psfind="ps aux | grep"
# Network utilities
alias listen="lsof -P -i -n"
alias port='netstat -tulanp'
alias ipinfo="curl ifconfig.me && curl ifconfig.me/host"
# -------------------------------------
# utility functions
# generates a random password of length $1
genpasswd() { strings /dev/urandom | grep -o '[[:alnum:]]' | head -n $1 | tr -d '\n'; echo; }
# sorts directory items, by size
sbs() { du -b --max-depth 1 $1 | sort -nr | perl -pe 's{([0-9]+)}{sprintf "%.1f%s", $1>=2**30? ($1/2**30, "G"): $1>=2**20? ($1/2**20, "M"): $1>=2**10? ($1/2**10, "K"): ($1, "")}e';}
# list of directorys under arg1, sorted by size
dir_size_list() { du -h --max-depth=1 $1 | sort -hr; }
# make directory and switch to it
mcd() { mkdir -p "$1"; cd "$1";}
# quickly backup a file
bak() { cp "$1"{,.bak};}
## extracts any archive
extract() {
	if [ -f "$1" ]; then
		case $1 in
		*.tar.bz2)	tar xjf $1 ;;
		*.tar.gz)	tar xzf $1 ;;
		*.bz2)		bunzip2 $1 ;;
		*.rar)		unrar e $1 ;;
		*.gz)		gunzip $1 ;;
		*.tar)		tar xf $1 ;;
		*.tbz2)		tar xjf $1 ;;
		*.tgz)		tar xzf $1 ;;
		*.zip)		unzip $1  ;;
		*.Z)		uncompress $1  ;;
		*.7z)		7z x $1  ;;
		*)	 echo "'$1' cannot be extracted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}
# export PATH="$PATH:~/.local/bin"